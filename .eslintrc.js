module.exports = {
	env: {
		es6: true,
		node: true,
		jest: true,
		'jest/globals': true,
	},
	extends: [
		'eslint:recommended',
		'plugin:react/recommended',
		'plugin:react-hooks/recommended',
		'plugin:@typescript-eslint/eslint-recommended',
		'plugin:@typescript-eslint/recommended',
		'plugin:@typescript-eslint/recommended-requiring-type-checking',
		'prettier',
		'plugin:jsx-a11y/recommended',
		'plugin:react-native/all',
		'plugin:jest-formatting/recommended',
		'plugin:jest/recommended',
		'plugin:jest/style',
		'plugin:react-native/all',
		'plugin:@tanstack/eslint-plugin-query/recommended',
		'plugin:sonarjs/recommended-legacy',
		'plugin:deprecation/recommended',
		'plugin:security/recommended-legacy',
		'plugin:regexp/recommended',
	],
	overrides: [
		{
			env: {
				node: true,
			},
			files: ['.eslintrc.{js,cjs}', '*.spec.tsx'],
			extends: ['plugin:testing-library/react'],
			parserOptions: {
				sourceType: 'script',
			},
		},
		{
			files: ['*.ts', '*.tsx'],
			extends: [
				'plugin:@typescript-eslint/eslint-recommended',
				'plugin:@typescript-eslint/recommended',
				'plugin:@typescript-eslint/recommended-requiring-type-checking',
			],
			parserOptions: {
				project: ['./tsconfig.json'],
			},
		},
		{
			files: ['*.ts', '*.tsx'],
			rules: {
				'import/order': [
					'error',
					{
						groups: ['external', 'builtin', 'internal', 'parent', 'sibling'],
						pathGroups: [
							{
								pattern: 'react+(|-native)',
								group: 'external',
								position: 'before',
							},
							{
								pattern: 'expo',
								group: 'external',
								position: 'before',
							},
							{
								pattern: '@/**',
								group: 'internal',
								position: 'before',
							},
							{
								pattern: './',
								group: 'internal',
								position: 'before',
							},
						],
						pathGroupsExcludedImportTypes: ['react+(|-native)'],
						alphabetize: {
							order: 'asc',
							caseInsensitive: true,
						},
						'newlines-between': 'always',
					},
				],
			},
		},
	],
	parser: '@typescript-eslint/parser',
	parserOptions: {
		parser: '@typescript-eslint/parser',
		tsconfigRootDir: __dirname,
		ecmaFeatures: {
			jsx: true,
		},
		project: './tsconfig.json',
	},
	plugins: [
		'react',
		'react-hooks',
		'@typescript-eslint',
		'prettier',
		'jsx-a11y',
		'react-native',
		'jest-formatting',
		'jest',
		'testing-library',
		'import',
		'sonarjs',
		'expo',
		'deprecation',
		'promise',
		'regexp',
	],
	rules: {
		'no-empty-function': 'off',
		'@typescript-eslint/no-empty-function': 'off',
		'react/display-name': 'off',
		'react/prop-types': 'off',
		'prettier/prettier': 'error',
		'react/react-in-jsx-scope': 'off',
		'react-hooks/exhaustive-deps': 'warn',
		'@typescript-eslint/explicit-module-boundary-types': 'off',
		'jest/no-disabled-tests': 'warn',
		'jest/no-focused-tests': 'error',
		'jest/no-identical-title': 'error',
		'jest/prefer-to-have-length': 'warn',
		'jest/valid-expect': 'error',
		'jest/expect-expect': ['error', { assertFunctionNames: ['expect'] }],
		'testing-library/await-async-queries': 'error',
		'testing-library/no-await-sync-queries': 'error',
		'testing-library/no-debugging-utils': 'warn',
		'testing-library/no-dom-import': 'off',
		'sonarjs/no-invalid-await': 'off',
		'sonarjs/todo-tag': 'warn',
		'sonarjs/deprecation': 'warn',
		'expo/no-env-var-destructuring': 'error',
		'expo/no-dynamic-env-var': 'error',
		'promise/always-return': 'error',
		'promise/no-return-wrap': 'error',
		'promise/param-names': 'error',
		'promise/catch-or-return': 'error',
		'promise/no-native': 'off',
		'promise/no-nesting': 'warn',
		'promise/no-promise-in-callback': 'warn',
		'promise/no-callback-in-promise': 'warn',
		'promise/avoid-new': 'warn',
		'promise/no-new-statics': 'error',
		'promise/no-return-in-finally': 'warn',
		'promise/valid-params': 'warn',
		'promise/no-multiple-resolved': 'error',
	},
	settings: {
		react: {
			version: 'detect',
		},
		'json/sort-package-json': 'standard',
		'json/ignore-files': ['**/package-lock.json'],
		'json/json-with-comments-files': ['**/tsconfig.json', '.vscode/**'],
	},
}
